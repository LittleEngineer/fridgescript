/* This FLex file was machine-generated by the BNF converter */
%{
#include <string.h>
#include "Parser.H"
#define YY_BUFFER_LENGTH 4096
extern int yy_mylinenumber ;
char YY_PARSED_STRING[YY_BUFFER_LENGTH];
void YY_BUFFER_APPEND(char *s)
{
  strcat(YY_PARSED_STRING, s); //Do something better here!
}
void YY_BUFFER_RESET(void)
{
  for(int x = 0; x < YY_BUFFER_LENGTH; x++)
    YY_PARSED_STRING[x] = 0;
}

%}

LETTER [a-zA-Z]
CAPITAL [A-Z]
SMALL [a-z]
DIGIT [0-9]
IDENT [a-zA-Z0-9'_]
%START YYINITIAL COMMENT CHAR CHARESC CHAREND STRING ESCAPED
%%

<YYINITIAL>","      	 return _SYMB_0;
<YYINITIAL>":"      	 return _SYMB_1;
<YYINITIAL>"st(0)"      	 return _SYMB_2;
<YYINITIAL>"st(1)"      	 return _SYMB_3;
<YYINITIAL>"st(2)"      	 return _SYMB_4;
<YYINITIAL>"st(3)"      	 return _SYMB_5;
<YYINITIAL>"st(4)"      	 return _SYMB_6;
<YYINITIAL>"st(5)"      	 return _SYMB_7;
<YYINITIAL>"st(6)"      	 return _SYMB_8;
<YYINITIAL>"st(7)"      	 return _SYMB_9;
<YYINITIAL>"["      	 return _SYMB_10;
<YYINITIAL>"]"      	 return _SYMB_11;
<YYINITIAL>"+"      	 return _SYMB_12;
<YYINITIAL>"-"      	 return _SYMB_13;
<YYINITIAL>"add"      	 return _SYMB_14;
<YYINITIAL>"call"      	 return _SYMB_15;
<YYINITIAL>"eax"      	 return _SYMB_16;
<YYINITIAL>"ebp"      	 return _SYMB_17;
<YYINITIAL>"ebx"      	 return _SYMB_18;
<YYINITIAL>"ecx"      	 return _SYMB_19;
<YYINITIAL>"edi"      	 return _SYMB_20;
<YYINITIAL>"edx"      	 return _SYMB_21;
<YYINITIAL>"esi"      	 return _SYMB_22;
<YYINITIAL>"esp"      	 return _SYMB_23;
<YYINITIAL>"f2xm1"      	 return _SYMB_24;
<YYINITIAL>"fadd"      	 return _SYMB_25;
<YYINITIAL>"faddp"      	 return _SYMB_26;
<YYINITIAL>"fchs"      	 return _SYMB_27;
<YYINITIAL>"fcmovb"      	 return _SYMB_28;
<YYINITIAL>"fcmovbe"      	 return _SYMB_29;
<YYINITIAL>"fcmove"      	 return _SYMB_30;
<YYINITIAL>"fcmovnb"      	 return _SYMB_31;
<YYINITIAL>"fcmovnbe"      	 return _SYMB_32;
<YYINITIAL>"fcmovne"      	 return _SYMB_33;
<YYINITIAL>"fcmovnu"      	 return _SYMB_34;
<YYINITIAL>"fcmovu"      	 return _SYMB_35;
<YYINITIAL>"fcomi"      	 return _SYMB_36;
<YYINITIAL>"fcos"      	 return _SYMB_37;
<YYINITIAL>"fdecstp"      	 return _SYMB_38;
<YYINITIAL>"fdivp"      	 return _SYMB_39;
<YYINITIAL>"fdivrp"      	 return _SYMB_40;
<YYINITIAL>"ffree"      	 return _SYMB_41;
<YYINITIAL>"fild"      	 return _SYMB_42;
<YYINITIAL>"fincstp"      	 return _SYMB_43;
<YYINITIAL>"fist"      	 return _SYMB_44;
<YYINITIAL>"fistp"      	 return _SYMB_45;
<YYINITIAL>"fld"      	 return _SYMB_46;
<YYINITIAL>"fld1"      	 return _SYMB_47;
<YYINITIAL>"fldl2e"      	 return _SYMB_48;
<YYINITIAL>"fldlg2"      	 return _SYMB_49;
<YYINITIAL>"fldln2"      	 return _SYMB_50;
<YYINITIAL>"fldpi"      	 return _SYMB_51;
<YYINITIAL>"fldz"      	 return _SYMB_52;
<YYINITIAL>"fmulp"      	 return _SYMB_53;
<YYINITIAL>"fpatan"      	 return _SYMB_54;
<YYINITIAL>"fprem"      	 return _SYMB_55;
<YYINITIAL>"fptan"      	 return _SYMB_56;
<YYINITIAL>"frndint"      	 return _SYMB_57;
<YYINITIAL>"fscale"      	 return _SYMB_58;
<YYINITIAL>"fsin"      	 return _SYMB_59;
<YYINITIAL>"fsqrt"      	 return _SYMB_60;
<YYINITIAL>"fst"      	 return _SYMB_61;
<YYINITIAL>"fstp"      	 return _SYMB_62;
<YYINITIAL>"fsub"      	 return _SYMB_63;
<YYINITIAL>"fsubp"      	 return _SYMB_64;
<YYINITIAL>"fsubrp"      	 return _SYMB_65;
<YYINITIAL>"fxch"      	 return _SYMB_66;
<YYINITIAL>"fyl2x"      	 return _SYMB_67;
<YYINITIAL>"fyl2xp1"      	 return _SYMB_68;
<YYINITIAL>"jb"      	 return _SYMB_69;
<YYINITIAL>"jbe"      	 return _SYMB_70;
<YYINITIAL>"je"      	 return _SYMB_71;
<YYINITIAL>"jmp"      	 return _SYMB_72;
<YYINITIAL>"jne"      	 return _SYMB_73;
<YYINITIAL>"jnz"      	 return _SYMB_74;
<YYINITIAL>"jz"      	 return _SYMB_75;
<YYINITIAL>"pop"      	 return _SYMB_76;
<YYINITIAL>"push"      	 return _SYMB_77;
<YYINITIAL>"ret"      	 return _SYMB_78;
<YYINITIAL>"sub"      	 return _SYMB_79;

<YYINITIAL>"#"[^\n]*\n  ++yy_mylinenumber ; 	 /* BNFC single-line comment */;
<YYINITIAL>"'"[^\n]*\n  ++yy_mylinenumber ; 	 /* BNFC single-line comment */;
<YYINITIAL>"//"[^\n]*\n  ++yy_mylinenumber ; 	 /* BNFC single-line comment */;
<YYINITIAL>"--"[^\n]*\n  ++yy_mylinenumber ; 	 /* BNFC single-line comment */;
<YYINITIAL>"/*"      	 BEGIN COMMENT;
<COMMENT>"*/"      	 BEGIN YYINITIAL;
<COMMENT>.      	 /* BNFC multi-line comment */;
<COMMENT>[\n]   ++yy_mylinenumber ; 	 /* BNFC multi-line comment */;

<YYINITIAL>"{-"      	 BEGIN COMMENT;
<COMMENT>"-}"      	 BEGIN YYINITIAL;
<COMMENT>.      	 /* BNFC multi-line comment */;
<COMMENT>[\n]   ++yy_mylinenumber ; 	 /* BNFC multi-line comment */;

<YYINITIAL>0(x|X)({DIGIT}|[abcdef]|[ABCDEF])+     	 yylval.string_ = strdup(yytext); return _SYMB_80;
<YYINITIAL>{DIGIT}+      	 yylval.int_ = atoi(yytext); return _INTEGER_;
<YYINITIAL>{LETTER}{IDENT}*      	 yylval.string_ = strdup(yytext); return _IDENT_;
\n  ++yy_mylinenumber ;
<YYINITIAL>[ \t\r\n\f]      	 /* ignore white space. */;
<YYINITIAL>.      	 return _ERROR_;
%%
int initialize_lexer(FILE *inp) { yyin = inp; BEGIN YYINITIAL; }
int yywrap(void) { return 1; }

